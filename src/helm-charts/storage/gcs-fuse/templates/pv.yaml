# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- range $gcs := .Values.gcsVolumes }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "{{ $gcs.name }}-pv"
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: {{ default "2048Gi" $gcs.capacity }}
  persistentVolumeReclaimPolicy: Retain
  storageClassName: gcs-fuse-storage
  claimRef:
    name: {{ $gcs.name }}-pvc
    namespace: {{ default "default" $gcs.namespace }}
{{- if eq $gcs.type "data" }}
  mountOptions:
    - metadata-cache:ttl-secs:-1
    - metadata-cache:stat-cache-max-size-mb:-1
    - metadata-cache:type-cache-max-size-mb:-1
    - file-system:kernel-list-cache-ttl-secs:-1
    - file-cache:max-size-mb:-1
    - file-cache:enable-parallel-downloads:true
    - write:enable-streaming-writes:true
  {{- if $gcs.dirPath }}
  - only-dir:{{ $gcs.dirPath }}
  {{- end }}
  csi:
    driver: gcsfuse.csi.storage.gke.io
    volumeHandle: {{ $gcs.bucketName }}
    volumeAttributes:
      skipCSIBucketAccessCheck: "true"
      gcsfuseMetadataPrefetchOnMount: "true"
{{- else if eq $gcs.type "checkpoints" }}
  mountOptions:
    - metadata-cache:ttl-secs:-1
    - metadata-cache:negative-ttl-secs:0
    - metadata-cache:stat-cache-max-size-mb:-1
    - metadata-cache:type-cache-max-size-mb:-1
    - file-cache:max-size-mb:-1
    - file-cache:enable-parallel-downloads:true
    - file-system:kernel-list-cache-ttl-secs:0
    - write:enable-streaming-writes:true
  {{- if $gcs.dirPath }}
  - only-dir:{{ $gcs.dirPath }}
  {{- end }}
  csi:
    driver: gcsfuse.csi.storage.gke.io
    volumeHandle: {{ $gcs.bucketName }}
    volumeAttributes:
      skipCSIBucketAccessCheck: "true"
      gcsfuseMetadataPrefetchOnMount: "true"
{{- end }}
---
{{- end }}