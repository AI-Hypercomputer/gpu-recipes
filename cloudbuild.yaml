substitutions:
  _SHIPSHAPE_IMAGE: 'us-docker.pkg.dev/k8ssecurityvalidation-agent/k8ssecurityvalidation-agent/k8ssecurityvalidation-agent@sha256:cd45e6cd84e9a45462ddbca18c4731fd4e264d517ee98131eb5be4eb57691f44'

steps:
  - id: 'Copy metadata'
    name: 'ubuntu'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      mkdir -p security_test/scan_target/ && find . -mindepth 1 -maxdepth 1 -type d ! -name "security_test" -exec cp -r {} security_test/scan_target/ \;
      mkdir -p /workspace/security_test/scan_target
      # Exclude /workspace/security_test from the copy to avoid recursive issue
      find . -mindepth 1 -maxdepth 1 ! -path "./security_test" -exec cp -r {} /workspace/security_test/scan_target/ \;
      chown -R 65532:65532 /workspace/security_test/scan_target
      mkdir -p /workspace/security_test/allowlist
      cp -r security_test/allowlist/* /workspace/security_test/allowlist/ || echo "Allowlist folder is empty or not found"
    allowFailure: true

  - id: 'Run Shipshape on helm'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      docker run \
      --network=cloudbuild \
      --rm \
      -v /workspace/security_test/allowlist:/workspace/security_test/allowlist \
      -v /workspace/security_test/scan_target:/workspace/security_test/scan_target \
      ${_SHIPSHAPE_IMAGE} \
      --mode=helm \
      --allowlist_folder=/workspace/security_test/allowlist \
      --scan_path=/workspace/security_test/scan_target \
      --max_wait_duration=60 \
      2>&1 | tee /workspace/shipshape_on_helm.txt 2>&1
    allowFailure: true
    waitFor: ['Copy metadata']

  - id: 'check result'
    name: 'gcr.io/$PROJECT_ID/terraform'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if grep -q "Validation failed" /workspace/shipshape_on_helm.txt; then
        echo "Shipshape on helm scan validation failed, please check the log. knowledge share slides: go/shipshape-ai-on-gke-slide"
        exit 1
      fi
    waitFor: ['Run Shipshape on helm']